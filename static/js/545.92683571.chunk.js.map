{"version":3,"file":"static/js/545.92683571.chunk.js","mappings":"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","sources":["api/tmdb-api.js","components/headerMovieList/index.js","components/spinner/index.js","components/peopleCard/index.js","components/peopleList/index.js","components/templatePeopleListPage/index.js","pages/popularPeoplePage.js","theme/background.js","../node_modules/@mui/icons-material/AccountBoxOutlined.js","../node_modules/@mui/icons-material/ManOutlined.js","../node_modules/@mui/icons-material/Woman2Outlined.js"],"sourcesContent":["export const getMovies = (args) => {\r\n    const [, pagePart] = args.queryKey;\r\n    const { page } = pagePart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=${page}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .then((data) =>{\r\n            const movies = data.results;\r\n            const pageFirst = data.page;\r\n            return {\r\n                page: pageFirst,\r\n                results: movies,\r\n                total_results: 10000,\r\n                total_pages: 500\r\n            };\r\n        })\r\n        .catch((error) => {\r\n        throw error\r\n    });\r\n};\r\n\r\nexport const getMovie = (args) => {\r\n    //console.log(args) -> queryKey JSON\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getGenres = async () => {\r\n    return fetch(\r\n        \"https://api.themoviedb.org/3/genre/movie/list?api_key=\" +\r\n        process.env.REACT_APP_TMDB_KEY +\r\n        \"&language=en-US\"\r\n    ).then( (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getMovieImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then( (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getMovieReviews = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then( (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    }).catch((error) => {\r\n        throw error\r\n    });\r\n};\r\n\r\nexport const getUpcomingMovies = (args) => {\r\n    const [, pagePart] = args.queryKey;\r\n    const { page } = pagePart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=${page}`\r\n    ).then( (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    }).then((data) =>{\r\n        const movies = data.results;\r\n        const pageFirst = data.page;\r\n        return {\r\n            page: pageFirst,\r\n            results: movies,\r\n            total_results: 537,\r\n            total_pages: 14\r\n        };\r\n    }).catch((error) => {\r\n        throw error\r\n    });\r\n};\r\n\r\nexport const getWeekTrendingMovies = (args) => {\r\n    const [, pagePart] = args.queryKey;\r\n    const { page } = pagePart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/trending/movie/week?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=${page}`\r\n    ).then( (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    }).then((data) =>{\r\n        const movies = data.results;\r\n        const pageFirst = data.page;\r\n        return {\r\n            page: pageFirst,\r\n            results: movies,\r\n            total_results: 10000,\r\n            total_pages: 500\r\n        };\r\n    }).catch((error) => {\r\n        throw error\r\n    });\r\n};\r\n\r\nexport const getMovieVideos = ({queryKey}) => {\r\n    const [, idPart] = queryKey;\r\n    const {id} = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getMovieCredits = ({queryKey}) => {\r\n    const [, idPart] = queryKey;\r\n    const {id} = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getPopularPeople  = (args) => {\r\n    const [, pagePart] = args.queryKey;\r\n    const { page } = pagePart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/person/popular?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=${page}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .then((data) =>{\r\n            const actors = data.results;\r\n            const pageFirst = data.page;\r\n            return {\r\n                page: pageFirst,\r\n                results: actors,\r\n                total_results: 10000,\r\n                total_pages: 500\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getPopularPeopleDetail = (args) => {\r\n    const [, idPart] = args.queryKey;\r\n    const {id} = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/person/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getPeopleImages = ({queryKey}) => {\r\n    const [, idPart] = queryKey;\r\n    const {id} = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/person/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getPeopleMovieCredits = ({queryKey}) => {\r\n    const [, idPart] = queryKey;\r\n    const {id} = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/person/${id}/movie_credits?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getPeopleTVCredits = ({queryKey}) => {\r\n    const [, idPart] = queryKey;\r\n    const {id} = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/person/${id}/tv_credits?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n","import React from \"react\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Header = (props ) => {\r\n    const title = props.title;\r\n    const navigate = useNavigate();\r\n    return (\r\n        <Paper\r\n            elevation={5}\r\n            component=\"div\"\r\n            sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                flexWrap: \"wrap\",\r\n                marginBottom: 1.5,\r\n            }}\r\n        >\r\n            <IconButton aria-label=\"go back\" onClick={() => navigate(-1)}>\r\n                <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\r\n            </IconButton>\r\n            <Typography variant=\"h4\" component=\"h3\">\r\n                {title}\r\n            </Typography>\r\n            <IconButton aria-label=\"go forward\" onClick={() => navigate(+1)}>\r\n                <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\r\n            </IconButton>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nexport default function CircularIndeterminate() {\r\n    return (\r\n        <div sx={{\r\n            display: 'flex',\r\n            justifyContent: \"center\",\r\n            '& > * + *': {\r\n                marginLeft: '2em',\r\n            }}}>\r\n            <CircularProgress />\r\n            <CircularProgress />\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AccountBoxOutlinedIcon from '@mui/icons-material/AccountBoxOutlined';\r\nimport StackedLineChartIcon from '@mui/icons-material/StackedLineChart';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport img from '../../images/film-poster-placeholder.png'\r\nimport {Link} from \"react-router-dom\";\r\nimport backgroundImageStyles from \"../../theme/background\";\r\nimport Box from \"@mui/material/Box\";\r\nimport ManOutlinedIcon from '@mui/icons-material/ManOutlined';\r\nimport Woman2OutlinedIcon from '@mui/icons-material/Woman2Outlined';\r\n\r\nexport default function PeopleCard({people, action, avatarCheck}) {\r\n\r\n    return (\r\n        <Card sx={{maxWidth: 345}} elevation={5} style={backgroundImageStyles.backgroundCardContainer}>\r\n            <CardHeader\r\n                avatar={\r\n                    avatarCheck(people)\r\n                }\r\n                title={\r\n                    <Typography variant=\"h5\" component=\"p\">\r\n                        {people.name}{\" \"}\r\n                    </Typography>\r\n                }\r\n            />\r\n            <CardMedia\r\n                sx={{height: 500}}\r\n                image={\r\n                    people.profile_path\r\n                        ? `https://image.tmdb.org/t/p/w500/${people.profile_path}`\r\n                        : img\r\n                }\r\n            />\r\n            <CardContent>\r\n                <Grid container>\r\n                    <Grid item xs={6}>\r\n                        <Typography variant=\"h6\" component=\"p\" style={{whiteSpace: 'nowrap'}}>\r\n                            <AccountBoxOutlinedIcon fontSize=\"medium\"/>\r\n                            {\" \"}{people.known_for_department}{\" \"}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Typography variant=\"h6\" component=\"p\" style={{whiteSpace: 'nowrap'}}>\r\n                            <Box component=\"span\" ml={4} >\r\n                                {people.gender === 1 ? (\r\n                                    <>\r\n                                        <Woman2OutlinedIcon fontSize=\"medium\"/>\r\n                                        {\"Female\"}{\" \"}\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ManOutlinedIcon fontSize=\"medium\"/>\r\n                                        {\"Male\"}{\" \"}\r\n                                    </>\r\n                                )}\r\n                            </Box>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Typography variant=\"h6\" component=\"p\" style={{whiteSpace: 'nowrap'}}>\r\n                            <Box component=\"span\" ml={0}>\r\n                                <StackedLineChartIcon fontSize=\"medium\"/>\r\n                                {\" \"} {people.popularity.toFixed(2)}{\" \"}\r\n                            </Box>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                {action(people)}\r\n                <Link to={`/people/popular/${people.id}`}>\r\n                    <Button variant=\"outlined\" size=\"medium\" color=\"primary\" sx={{marginBottom:'25px',padding:'15px',marginLeft:'72px'}}>\r\n                        More Info ...\r\n                    </Button>\r\n                </Link>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}","import React from \"react\";\r\nimport People from \"../peopleCard\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst PeopleList = ( {people, action ,avatarCheck}) => {\r\n    return people.map((p) => (\r\n        <Grid key={p.id} item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n            <People key={p.id} people={p} action={action} avatarCheck={avatarCheck}/>\r\n        </Grid>\r\n    ));\r\n};\r\n\r\nexport default PeopleList;","import React from \"react\";\r\nimport Header from \"../headerMovieList\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport backgroundImageStyles from \"../../theme/background\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport {Pagination, Stack} from \"@mui/material\";\r\nimport PeopleList from \"../peopleList\";\r\n\r\nfunction PeopleListPageTemplate({people, title, action, avatarCheck, pageChange, currentPage,totalPages}) {\r\n\r\n    return (\r\n        <Grid container sx={{padding: '20px'}} style={backgroundImageStyles.backgroundMainContainer}>\r\n            <Grid item xs={12}>\r\n                <Header title={title}/>\r\n            </Grid>\r\n            <Grid item container spacing={5}>\r\n                <PeopleList action={action} people={people} avatarCheck={avatarCheck}></PeopleList>\r\n            </Grid>\r\n            <Paper\r\n                elevation={5}\r\n                component=\"div\"\r\n                sx={{\r\n                    display: \"flex\",\r\n                    marginTop: 2.0,\r\n                    left: '50%',\r\n                    transform: 'translateX(-50%)',\r\n                    zIndex: 1000,\r\n                    position: 'relative',\r\n                    padding: 1.1,\r\n                }}\r\n            >\r\n                <Stack spacing={2}>\r\n                    <Pagination count={totalPages} page={currentPage} onChange={pageChange} variant=\"outlined\"\r\n                                shape=\"rounded\" size=\"large\" boundaryCount={2} showFirstButton showLastButton/>\r\n                </Stack>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default PeopleListPageTemplate;","import React, {useState} from \"react\";\r\nimport {getPopularPeople} from \"../api/tmdb-api\";\r\nimport PeoplePageTemplate from \"../components/templatePeopleListPage\";\r\nimport {useQuery} from \"react-query\";\r\nimport Spinner from \"../components/spinner\";\r\n\r\n\r\nconst PopularPeoplePage = () => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    //have done for using react-query\r\n    const {data, error, isLoading, isError} = useQuery(\r\n        [\"popularPeople\",{page:currentPage}],\r\n        getPopularPeople\r\n    );\r\n\r\n    if (isLoading) {\r\n        return <Spinner/>;\r\n    }\r\n\r\n    if (isError) {\r\n        return <h1>{error.message}</h1>;\r\n    }\r\n\r\n    const people = data.results;\r\n    const totalPages = data.total_pages;\r\n\r\n    return (\r\n        <PeoplePageTemplate\r\n            title=\"Popular People\"\r\n            people={people}\r\n            currentPage={currentPage}\r\n            totalPages={totalPages}\r\n            pageChange={(event, value) => {\r\n                setCurrentPage(value);\r\n            }}\r\n            action={() => {\r\n                return (\r\n                    <>\r\n\r\n                    </>\r\n                );\r\n            }}\r\n            avatarCheck={() => {\r\n                return (\r\n                    <>\r\n                    </>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PopularPeoplePage;","import backgroundMainImage from '../images/pexels-eberhard-grossgasteiger-1366919.jpg';\r\nimport backgroundCardImage from '../images/pexels-laura-tancredi-7078717.jpg';\r\n\r\nconst backgroundImageStyles = {\r\n    backgroundMainContainer: {\r\n        backgroundImage: `url(${backgroundMainImage})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        width: '100%',\r\n        zIndex: -1,\r\n        position: 'absolute',\r\n        right: 0,\r\n        left: 0,\r\n    },\r\n    backgroundCardContainer: {\r\n        backgroundImage: `url(${backgroundCardImage})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        zIndex: -1,\r\n    },\r\n    backgroundDetailContainer:{\r\n        backgroundColor: 'rgba(219,232,240,0.7)',\r\n        position: 'fixed', // 使用 fixed 而不是 absolute 以确保它覆盖整个屏幕\r\n        top: 0,\r\n        left: 0,\r\n        width: '100vw',\r\n        height: '100vh',\r\n    },\r\n};\r\n\r\nexport default backgroundImageStyles;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 16H7v-.24C8.42 17.62 10.16 17 12 17s3.58.62 5 1.76V19zm2-1.14C17.2 16.09 14.73 15 12 15s-5.2 1.09-7 2.86V5h14v12.86zM12 13c1.93 0 3.5-1.57 3.5-3.5S13.93 6 12 6 8.5 7.57 8.5 9.5 10.07 13 12 13zm0-5c.83 0 1.5.67 1.5 1.5S12.83 11 12 11s-1.5-.67-1.5-1.5S11.17 8 12 8z\"\n}), 'AccountBoxOutlined');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 7h-4c-1.1 0-2 .9-2 2v6h2v7h4v-7h2V9c0-1.1-.9-2-2-2z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"12\",\n  cy: \"4\",\n  r: \"2\"\n}, \"1\")], 'ManOutlined');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13.94 8.31C13.62 7.52 12.85 7 12 7s-1.62.52-1.94 1.31L7 16h3.5v6h3v-6H17l-3.06-7.69z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"12\",\n  cy: \"4\",\n  r: \"2\"\n}, \"1\")], 'Woman2Outlined');\nexports.default = _default;"],"names":["getMovies","args","page","_slicedToArray","queryKey","fetch","concat","process","then","response","ok","Error","json","message","data","movies","results","total_results","total_pages","catch","error","getMovie","id","getGenres","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","apply","arguments","getMovieImages","_ref2","getMovieReviews","_ref3","getUpcomingMovies","getWeekTrendingMovies","getMovieVideos","_ref4","getMovieCredits","_ref5","getPopularPeople","actors","getPopularPeopleDetail","getPeopleImages","_ref6","getPeopleMovieCredits","_ref7","getPeopleTVCredits","_ref8","props","title","navigate","useNavigate","_jsxs","Paper","elevation","component","sx","display","justifyContent","flexWrap","marginBottom","children","_jsx","IconButton","onClick","ArrowBackIcon","color","fontSize","Typography","variant","ArrowForwardIcon","CircularIndeterminate","marginLeft","CircularProgress","PeopleCard","people","action","avatarCheck","Card","maxWidth","style","backgroundImageStyles","backgroundCardContainer","CardHeader","avatar","name","CardMedia","height","image","profile_path","img","CardContent","Grid","container","item","xs","whiteSpace","AccountBoxOutlinedIcon","known_for_department","Box","ml","gender","_Fragment","Woman2OutlinedIcon","ManOutlinedIcon","StackedLineChartIcon","popularity","toFixed","CardActions","disableSpacing","Link","to","Button","size","padding","map","p","sm","md","lg","xl","People","pageChange","currentPage","totalPages","backgroundMainContainer","Header","spacing","PeopleList","marginTop","left","transform","zIndex","position","Stack","Pagination","count","onChange","shape","boundaryCount","showFirstButton","showLastButton","_useState","useState","_useState2","setCurrentPage","_useQuery","useQuery","isLoading","isError","Spinner","PeoplePageTemplate","event","value","backgroundImage","backgroundMainImage","backgroundSize","backgroundPosition","width","right","backgroundCardImage","backgroundDetailContainer","backgroundColor","top","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy","r"],"sourceRoot":""}