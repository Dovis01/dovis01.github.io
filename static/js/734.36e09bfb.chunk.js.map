{"version":3,"file":"static/js/734.36e09bfb.chunk.js","mappings":"gPAYMA,EAAU,CACZ,CACIC,MAAO,EACPC,MAAO,aAEX,CACID,MAAO,EACPC,MAAO,QAEX,CACID,MAAO,EACPC,MAAO,WAEX,CACID,MAAO,EACPC,MAAO,QAEX,CACID,MAAO,EACPC,MAAO,aAITC,EAAS,CACXC,KAAM,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,QAEhBC,KAAM,CACFC,MAAO,OACP,SAAU,CACNL,UAAW,IAGnBM,UAAW,CACPD,MAAO,QAEXE,OAAQ,CACJC,YAAa,GAEjBC,MAAO,CACHJ,MAAO,MACP,SAAU,CACNA,MAAO,UA4KnB,UAvKmB,SAAHK,GAAmB,IAAbC,EAAKD,EAALC,MACZC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAC3BC,GAA4BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAwBL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdG,GAAWC,EAAAA,EAAAA,MASjBC,GAKIC,EAAAA,EAAAA,IAZkB,CAClBC,OAAQ,GACRC,OAAQ,GACRC,OAAO,EACPZ,OAAQ,MAIRa,EAAOL,EAAPK,QACaC,EAAMN,EAAnBO,UAAaD,OACbE,EAAYR,EAAZQ,aACAC,EAAKT,EAALS,MAGEC,EAAqB,SAACC,GACxBlB,EAAUkB,EAAMC,OAAO3C,MAC3B,EAUM4C,EAAmB,SAACF,GACtBd,GAAQ,GACRC,EAAS,oBACb,EAEA,OACIgB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,UAAU,MAAMC,GAAI9C,EAAOC,KAAK8C,SAAA,EACjCC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACJ,UAAU,KAAKK,QAAQ,KAAIH,SAAC,oBAIxCC,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CACLL,GAAI9C,EAAOW,MACXyC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7C7B,KAAMA,EACN8B,QAASb,EAAiBK,UAE1BC,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CACLC,SAAS,UACTP,QAAQ,SACRK,QAASb,EAAiBK,UAE1BC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAC,2CAMjCJ,EAAAA,EAAAA,MAAA,QAAMG,GAAI9C,EAAOM,KAAMoD,SAAUrB,GApCxB,SAACL,GACdA,EAAO2B,QAAU9C,EAAM+C,GACvB5B,EAAOX,OAASA,EAEhBP,EAAQ+C,UAAUhD,EAAOmB,GACzBN,GAAQ,EACZ,IA8BiEoC,YAAU,EAAAf,SAAA,EAC/DC,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACPC,KAAK,SACL9B,QAASA,EACT+B,MAAO,CAAEC,SAAU,oBACnBC,aAAa,GACbC,OAAQ,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,MAASC,EAAQF,EAARE,SAAU1E,EAAKwE,EAALxE,MAAK,OAC/BkD,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CACN3B,GAAI,CAAEvC,MAAO,QACb2C,QAAQ,WACRwB,OAAO,SACPR,UAAQ,EACRM,SAAUA,EACV1E,MAAOA,EACP8D,GAAG,SACH7D,MAAM,gBACNiE,KAAK,SACLW,WAAS,GACX,IAGTxC,EAAOJ,SACJiB,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKL,UAAU,IAAGE,SACjCZ,EAAOJ,OAAO6C,WAGvB5B,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACPC,KAAK,SACL9B,QAASA,EACT+B,MAAO,CACHC,SAAU,0BACVW,UAAW,CAAE/E,MAAO,GAAI8E,QAAS,wBAErCT,aAAa,GACbC,OAAQ,SAAAU,GAAA,IAAAC,EAAAD,EAAGP,MAASC,EAAQO,EAARP,SAAU1E,EAAKiF,EAALjF,MAAK,OAC/BkD,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CACNvB,QAAQ,WACRwB,OAAO,SACPR,UAAQ,EACRc,WAAS,EACThB,KAAK,SACLlE,MAAOA,EACP0E,SAAUA,EACVzE,MAAM,cACN6D,GAAG,SACHqB,WAAS,EACTC,QAAS,IACX,IAGT/C,EAAOH,SACJgB,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKL,UAAU,IAAGE,SACjCZ,EAAOH,OAAO4C,WAIvB5B,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACP7B,QAASA,EACT8B,KAAK,SACLI,OAAQ,SAAAe,GAAA,IAAAC,EAAAD,EAAGZ,MAAiBa,EAARZ,SAAeY,EAALtF,MAAK,OAC/BkD,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CACNb,GAAG,gBACHyB,QAAM,EACNnC,QAAQ,WACRnD,MAAM,gBACND,MAAOuB,EACPmD,SAAUjC,EACV+C,WAAW,2BAA0BvC,SAEpClD,EAAQ0F,KAAI,SAACC,GAAM,OAChBxC,EAAAA,EAAAA,KAACyC,EAAAA,EAAQ,CAAoB3F,MAAO0F,EAAO1F,MAAMiD,SAC5CyC,EAAOzF,OADGyF,EAAO1F,MAEX,KAEP,KAIpB6C,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACE,GAAI9C,EAAO0F,QAAQ3C,SAAA,EACpBC,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,CACHC,KAAK,SACL1C,QAAQ,YACR2C,MAAM,UACN/C,GAAI9C,EAAOS,OAAOsC,SACrB,YAGDC,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,CACHC,KAAK,QACL1C,QAAQ,YACR2C,MAAM,YACN/C,GAAI9C,EAAOS,OACXqF,QAAS,WACLxD,EAAM,CACFP,OAAQ,GACRgE,QAAS,IAEjB,EAAEhD,SACL,kBAOrB,C","sources":["components/reviewForm/index.js"],"sourcesContent":["import Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport { MoviesContext } from \"../../contexts/moviesContext\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ratings = [\r\n    {\r\n        value: 5,\r\n        label: \"Excellent\",\r\n    },\r\n    {\r\n        value: 4,\r\n        label: \"Good\",\r\n    },\r\n    {\r\n        value: 3,\r\n        label: \"Average\",\r\n    },\r\n    {\r\n        value: 2,\r\n        label: \"Poor\",\r\n    },\r\n    {\r\n        value: 0,\r\n        label: \"Terrible\",\r\n    },\r\n];\r\n\r\nconst styles = {\r\n    root: {\r\n        marginTop: 2,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"left\",\r\n    },\r\n    form: {\r\n        width: \"100%\",\r\n        \"& > * \": {\r\n            marginTop: 2,\r\n        },\r\n    },\r\n    textField: {\r\n        width: \"40ch\",\r\n    },\r\n    submit: {\r\n        marginRight: 2,\r\n    },\r\n    snack: {\r\n        width: \"50%\",\r\n        \"& > * \": {\r\n            width: \"100%\",\r\n        },\r\n    },\r\n};\r\n\r\nconst ReviewForm = ({ movie }) => {\r\n    const context = useContext(MoviesContext);\r\n    const [rating, setRating] = useState(3);\r\n    const [open, setOpen] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const defaultValues = {\r\n        author: \"\",\r\n        review: \"\",\r\n        agree: false,\r\n        rating: \"3\",\r\n    };\r\n\r\n    const {\r\n        control,\r\n        formState: { errors },\r\n        handleSubmit,\r\n        reset,\r\n    } = useForm(defaultValues);\r\n\r\n    const handleRatingChange = (event) => {\r\n        setRating(event.target.value);\r\n    };\r\n\r\n    const onSubmit = (review) => {\r\n        review.movieId = movie.id;\r\n        review.rating = rating;\r\n        // console.log(review);\r\n        context.addReview(movie, review);\r\n        setOpen(true); // NEW\r\n    };\r\n\r\n    const handleSnackClose = (event) => {\r\n        setOpen(false);\r\n        navigate(\"/movies/favorites\");\r\n    };\r\n\r\n    return (\r\n        <Box component=\"div\" sx={styles.root}>\r\n            <Typography component=\"h2\" variant=\"h3\">\r\n                Write a review\r\n            </Typography>\r\n\r\n            <Snackbar\r\n                sx={styles.snack}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                open={open}\r\n                onClose={handleSnackClose}\r\n            >\r\n                <MuiAlert\r\n                    severity=\"success\"\r\n                    variant=\"filled\"\r\n                    onClose={handleSnackClose}\r\n                >\r\n                    <Typography variant=\"h4\">\r\n                        Thank you for submitting a review\r\n                    </Typography>\r\n                </MuiAlert>\r\n            </Snackbar>\r\n\r\n            <form sx={styles.form} onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <Controller\r\n                    name=\"author\"\r\n                    control={control}\r\n                    rules={{ required: \"Name is required\" }}\r\n                    defaultValue=\"\"\r\n                    render={({ field: { onChange, value } }) => (\r\n                        <TextField\r\n                            sx={{ width: \"40ch\" }}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            id=\"author\"\r\n                            label=\"Author's name\"\r\n                            name=\"author\"\r\n                            autoFocus\r\n                        />\r\n                    )}\r\n                />\r\n                {errors.author && (\r\n                    <Typography variant=\"h6\" component=\"p\">\r\n                        {errors.author.message}\r\n                    </Typography>\r\n                )}\r\n                <Controller\r\n                    name=\"review\"\r\n                    control={control}\r\n                    rules={{\r\n                        required: \"Review cannot be empty.\",\r\n                        minLength: { value: 10, message: \"Review is too short\" },\r\n                    }}\r\n                    defaultValue=\"\"\r\n                    render={({ field: { onChange, value } }) => (\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"review\"\r\n                            value={value}\r\n                            onChange={onChange}\r\n                            label=\"Review text\"\r\n                            id=\"review\"\r\n                            multiline\r\n                            minRows={10}\r\n                        />\r\n                    )}\r\n                />\r\n                {errors.review && (\r\n                    <Typography variant=\"h6\" component=\"p\">\r\n                        {errors.review.message}\r\n                    </Typography>\r\n                )}\r\n\r\n                <Controller\r\n                    control={control}\r\n                    name=\"rating\"\r\n                    render={({ field: { onChange, value } }) => (\r\n                        <TextField\r\n                            id=\"select-rating\"\r\n                            select\r\n                            variant=\"outlined\"\r\n                            label=\"Rating Select\"\r\n                            value={rating}\r\n                            onChange={handleRatingChange}\r\n                            helperText=\"Don't forget your rating\"\r\n                        >\r\n                            {ratings.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    )}\r\n                />\r\n\r\n                <Box sx={styles.buttons}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        sx={styles.submit}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                    <Button\r\n                        type=\"reset\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        sx={styles.submit}\r\n                        onClick={() => {\r\n                            reset({\r\n                                author: \"\",\r\n                                content: \"\",\r\n                            });\r\n                        }}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ReviewForm;"],"names":["ratings","value","label","styles","root","marginTop","display","flexDirection","alignItems","form","width","textField","submit","marginRight","snack","_ref","movie","context","useContext","MoviesContext","_useState","useState","_useState2","_slicedToArray","rating","setRating","_useState3","_useState4","open","setOpen","navigate","useNavigate","_useForm","useForm","author","review","agree","control","errors","formState","handleSubmit","reset","handleRatingChange","event","target","handleSnackClose","_jsxs","Box","component","sx","children","_jsx","Typography","variant","Snackbar","anchorOrigin","vertical","horizontal","onClose","MuiAlert","severity","onSubmit","movieId","id","addReview","noValidate","Controller","name","rules","required","defaultValue","render","_ref2","_ref2$field","field","onChange","TextField","margin","autoFocus","message","minLength","_ref3","_ref3$field","fullWidth","multiline","minRows","_ref4","_ref4$field","select","helperText","map","option","MenuItem","buttons","Button","type","color","onClick","content"],"sourceRoot":""}